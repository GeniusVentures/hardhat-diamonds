## src/type-extensions.ts
```plain text
import "hardhat/types/config";
import "hardhat/types/runtime";
import "hardhat/types/config";

// export interface Diamonds {
//   deployments: IDeployments;
//   facetsToDeploy: IFacetsToDeploy;
// }

declare module "hardhat/types/config" {
  export interface HardhatUserConfig {
    diamondsConfig?: DiamondsUserConfig;
  }

  export interface HardhatConfig {
    diamondsConfig: DiamondsUserConfig;
  }
}

declare module "hardhat/types/runtime" {
  export interface HardhatRuntimeEnvironment {
    diamondsConfig: DiamondsUserConfig,
  }
}

export interface DiamondConfig {
    path?: string;
    deployments_path?: string;
    facets_path?: string;
    include: string[];
    exclude: string[];
  }
  
/**
 * Matches the structure:
 *
 *  diamonds: [
 *    ProxyDiamond: {
 *      path: '...',
 *      deployments_data: '...',
 *      facets_path: '...',
 *      include: [...],
 *      exclude: [...]
 *    },
 *    GeniusDiamond: {
 *      contracts_path: '...',
 *      diamond_deployments_path: '...',
 *      facets: [...]
 *    },
 *  ],
 */
export interface DiamondsUserConfig {
  // diamonds?: Record<string, DiamondConfig>;
  diamondsConfig?: Record<string, DiamondConfig>;
}

```

## src/index.ts
```plain text
import { extendConfig, extendEnvironment } from "hardhat/config";
import { HardhatConfig, HardhatUserConfig } from "hardhat/types";
import { lazyObject } from "hardhat/plugins";
import path from "path";
// import Diamonds from "./internal/Diamonds";
import "./type-extensions";

import "hardhat/types/runtime";
import { DiamondsUserConfig } from "./type-extensions";
import { HardhatRuntimeEnvironmentFields } from "./HardhatRuntimeEnvironmentFields";

// declare module "hardhat/types/runtime" {
//   export interface HardhatRuntimeEnvironment {
//     diamonds?: any;
//   }
// }

extendConfig((config: HardhatConfig, userConfig: Readonly<HardhatUserConfig>) => {
  // Set default config values
  const defaultDiamondsConfig: DiamondsUserConfig = {
    diamondsConfig: {},
  }
  config.diamondsConfig = {
    ...userConfig.diamondsConfig
  };
});

// extendEnvironment((hre) => {
//   // Expose hardhat-diamonds as part of the hre if needed
//   hre.diamondsConfig = lazyObject(() => new HardhatRuntimeEnvironmentFields());
// });

// export { default as Diamonds } from "./internal/Diamonds";
// export { default as DiamondDeploymentManager } from "./internal/DiamondDeploymentManager";
// export { default as DiamondDeployer } from "./internal/DiamondDeployer";
```

## src/HardhatRuntimeEnvironmentFields.ts
```plain text
import { HardhatRuntimeEnvironment } from "hardhat/types";
import { lazyObject } from "hardhat/plugins";
import "./type-extensions";
import { DiamondsUserConfig } from "./type-extensions";
// import { DiamondDeploymentManager } from "./internal/DiamondDeploymentManager";
// import { DiamondDeployer } from "./internal/DiamondDeployer";

export class HardhatRuntimeEnvironmentFields {
  
  private hre: HardhatRuntimeEnvironment; 
  private diamondsConfig: DiamondsUserConfig = {};

  constructor(hre: HardhatRuntimeEnvironment) {
    this.hre = hre;
    this.diamondsConfig = this.hre.config.diamondsConfig;
  }
  
  // get the diamonds config from the hardhat config
  private hardhatDiamondsConfig() {
    return this.diamondsConfig;
  }
  
  public getDiamondsConfig() : DiamondsUserConfig {
    return this.diamondsConfig;
     
  }
}

```

